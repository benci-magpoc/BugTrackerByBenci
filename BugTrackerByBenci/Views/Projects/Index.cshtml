@using BugTrackerByBenci.Models.Enums
@using BugTrackerByBenci.Services.Interfaces
@using Microsoft.AspNetCore.Mvc.TagHelpers
@*@model IEnumerable<BugTrackerByBenci.Models.Project>*@
@model BugTrackerByBenci.Models.ViewModels.ProjectsWithPmViewModel

@inject IBTProjectService projectService

@{
    ViewData["Title"] = "All Projects";
    //var pm = ViewData["PMinProject"]!;
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                Project Name
            </th>
            <th>
                Description
            </th>
            <th>
                Created Date
            </th>
            <th>
                Start Date
            </th>
            <th>
                End Date
            </th>
            <th>
                Image
            </th>
            <th>
                Image Type
            </th>
            <th>
                Company Name
            </th>
            <th>
                Priority
            </th>
            <th>PM Assigned</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.Projects!) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Created)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.StartDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.EndDate)
            </td>
            <td>
                @if (item?.FileData != null)
                {
                    <img id="projectImage" class="img-fluid img-thumbnail mt-2" style="width:120px;height:120px" src="data:image/*;base64,@(Convert.ToBase64String(item.FileData))" >
                }
                else
                {
                    <img id="projectImage" class="img-fluid img-thumbnail mt-2" style="width:120px;height:120px" src="https://cdn.icon-icons.com/icons2/2331/PNG/512/task_software_platform_management_project_icon_142266.png">
                }
            </td>
            <td>
                @Html.DisplayFor(modelItem => item!.FileContentType)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item!.Company!.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item!.Priority!.Name)
            </td>
            <td>
                @if (User.IsInRole(nameof(BTRoles.Admin)))
                {
                    @((await projectService.GetProjectManagerAsync(item.Id))?.FullName)
                }
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item!.Id">Edit</a> |
                <a asp-action="Details" asp-route-id="@item!.Id">Details</a> |
                <a asp-action="Archive" asp-route-id="@item!.Id">Archive</a>
                @if (User.IsInRole(nameof(BTRoles.Admin)))
                {
                    <text> | </text><a asp-action="AssignProjectManager" asp-route-id="@item!.Id">Assign Project Manager</a><text> |</text> 
                    <a asp-action="AssignProjectMembers" asp-route-id="@item!.Id">Assign Project Members</a>
                }
                @if (User.IsInRole(nameof(BTRoles.ProjectManager)))
                {
                    <text> | </text><a asp-action="AssignProjectMembers" asp-route-id="@item!.Id">Assign Project Members</a>
                }

            </td>
        </tr>
}
    </tbody>
</table>
